// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OneBus.Infra.Data.DbContexts;

#nullable disable

namespace OneBus.Infra.Data.Migrations
{
    [DbContext(typeof(OneBusDbContext))]
    partial class OneBusDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OneBus.Domain.Entities.Address", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Logradouro");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Municipio");

                    b.Property<string>("Complement")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Complemento");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataExclusao");

                    b.Property<string>("Number")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Numero");

                    b.Property<string>("PostCode")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Cep");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("Estado");

                    b.HasKey("Id");

                    b.HasIndex("PostCode");

                    b.ToTable("Endereco", (string)null);
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Bus", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<string>("ChassisBrand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MarcaChassi");

                    b.Property<string>("ChassisModel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ModeloChassi");

                    b.Property<int>("ChassisYear")
                        .HasColumnType("int")
                        .HasColumnName("AnoChassi");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataExclusao");

                    b.Property<DateOnly>("FumigateExpiration")
                        .HasColumnType("date")
                        .HasColumnName("DetetizacaoVencimento");

                    b.Property<bool>("HasLeftDoors")
                        .HasColumnType("bit")
                        .HasColumnName("TemPortasEsquerda");

                    b.Property<bool>("HasLowFloor")
                        .HasColumnType("bit")
                        .HasColumnName("TemPisoBaixo");

                    b.Property<DateOnly>("InsuranceExpiration")
                        .HasColumnType("date")
                        .HasColumnName("SeguroVencimento");

                    b.Property<byte>("ServiceType")
                        .HasColumnType("tinyint")
                        .HasColumnName("Servico");

                    b.Property<decimal>("VehicleId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("VeiculoId");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Onibus", (string)null);
                });

            modelBuilder.Entity("OneBus.Domain.Entities.BusAudit", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<decimal>("BusId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("OnibusId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("Data");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataExclusao");

                    b.Property<decimal>("EmployeeId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("FuncionarioId");

                    b.Property<decimal>("TotalMileage")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)")
                        .HasColumnName("TotalQuilometragem");

                    b.Property<decimal>("TotalMileageToday")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)")
                        .HasColumnName("TotalQuilometragemDia");

                    b.Property<decimal>("TotalPassengers")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("TotalPassageiros");

                    b.Property<decimal>("TotalPassengersToday")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("TotalPassageirosDia");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("OnibusAuditoria", (string)null);
                });

            modelBuilder.Entity("OneBus.Domain.Entities.BusOperation", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<decimal>("BusId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("OnibusId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("Data");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataExclusao");

                    b.Property<decimal>("EmployeeWorkDayId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("FuncionarioHorarioId");

                    b.Property<decimal>("LineTimeId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("LinhaHorarioId");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.HasIndex("EmployeeWorkDayId");

                    b.HasIndex("LineTimeId");

                    b.ToTable("OnibusOperacao", (string)null);
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Company", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<decimal>("AddressId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("EnderecoId");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataExclusao");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Image")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Foto");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("Nome");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Telefone");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("Cnpj");

                    b.HasIndex("Email");

                    b.ToTable("Empresa", (string)null);
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Employee", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<decimal>("AddressId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("EnderecoId");

                    b.Property<byte?>("BloodType")
                        .HasColumnType("tinyint")
                        .HasColumnName("TipoSanguineo");

                    b.Property<byte?>("CnhCategory")
                        .HasColumnType("tinyint")
                        .HasColumnName("CategoriaCnh");

                    b.Property<DateOnly?>("CnhExpiration")
                        .HasColumnType("date")
                        .HasColumnName("ValidadeCnh");

                    b.Property<string>("CnhNumber")
                        .IsUnicode(false)
                        .HasColumnType("varchar(900)")
                        .HasColumnName("NumeroCnh");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Codigo");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataExclusao");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<DateOnly>("HiringDate")
                        .HasColumnType("date")
                        .HasColumnName("DataContratacao");

                    b.Property<string>("Image")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Foto");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("Nome");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Telefone");

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<byte>("Role")
                        .HasColumnType("tinyint")
                        .HasColumnName("Cargo");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CnhNumber");

                    b.HasIndex("Code");

                    b.HasIndex("Cpf");

                    b.ToTable("Funcionario", (string)null);
                });

            modelBuilder.Entity("OneBus.Domain.Entities.EmployeeGarage", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataExclusao");

                    b.Property<decimal>("EmployeeId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("FuncionarioId");

                    b.Property<decimal>("GarageId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("GaragemId");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("GarageId");

                    b.ToTable("FuncionarioGaragem", (string)null);
                });

            modelBuilder.Entity("OneBus.Domain.Entities.EmployeeWorkday", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<byte>("DayType")
                        .HasColumnType("tinyint")
                        .HasColumnName("Dia");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataExclusao");

                    b.Property<decimal>("EmployeeId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("FuncionarioId");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("HoraFim");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("HoraInicio");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("FuncionarioHorario", (string)null);
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Garage", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<decimal>("AddressId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("EnderecoId");

                    b.Property<decimal>("CompanyId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("EmpresaId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataExclusao");

                    b.Property<string>("Image")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Foto");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("Nome");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Telefone");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Garagem", (string)null);
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Line", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<decimal>("CompanyId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("EmpresaId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataExclusao");

                    b.Property<byte>("MaxNumberBuses")
                        .HasColumnType("tinyint")
                        .HasColumnName("NumeroMaximoOnibus");

                    b.Property<decimal>("Mileage")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)")
                        .HasColumnName("Quilometragem");

                    b.Property<byte>("MinNumberBuses")
                        .HasColumnType("tinyint")
                        .HasColumnName("NumeroMinimoOnibus");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("Nome");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Numero");

                    b.Property<TimeOnly>("TravelTime")
                        .HasColumnType("time")
                        .HasColumnName("TempoViagem");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint")
                        .HasColumnName("Tipo");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Linha", (string)null);
                });

            modelBuilder.Entity("OneBus.Domain.Entities.LineAddress", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<decimal>("AddressId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("EnderecoId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataExclusao");

                    b.Property<byte>("DirectionLine")
                        .HasColumnType("tinyint")
                        .HasColumnName("SentidoLinha");

                    b.Property<decimal>("LineId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("LinhaId");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("LineId");

                    b.ToTable("LinhaEndereco", (string)null);
                });

            modelBuilder.Entity("OneBus.Domain.Entities.LineTariff", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataExclusao");

                    b.Property<decimal>("LineId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("LinhaId");

                    b.Property<int>("NumberTickets")
                        .HasColumnType("int")
                        .HasColumnName("NumeroBilhetes");

                    b.Property<decimal>("Price")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)")
                        .HasColumnName("Preco");

                    b.HasKey("Id");

                    b.HasIndex("LineId");

                    b.ToTable("LinhaTarifa", (string)null);
                });

            modelBuilder.Entity("OneBus.Domain.Entities.LineTariffAudit", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("Data");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataExclusao");

                    b.Property<decimal>("EmployeeId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("FuncionarioId");

                    b.Property<decimal>("LineTariffId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("LinhaTarifaId");

                    b.Property<int>("RemainingTicketsNumber")
                        .HasColumnType("int")
                        .HasColumnName("NumeroRestanteBilhetes");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LineTariffId");

                    b.ToTable("LinhaTarifaAuditoria", (string)null);
                });

            modelBuilder.Entity("OneBus.Domain.Entities.LineTime", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<byte>("DayType")
                        .HasColumnType("tinyint")
                        .HasColumnName("Dia");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataExclusao");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("HoraFim");

                    b.Property<decimal>("LineId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("LinhaId");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("HoraInicio");

                    b.HasKey("Id");

                    b.HasIndex("LineId");

                    b.ToTable("LinhaHorario", (string)null);
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Maintenance", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<decimal>("Cost")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)")
                        .HasColumnName("Custo");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataExclusao");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Descricao");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("DataFim");

                    b.Property<byte>("Sector")
                        .HasColumnType("tinyint")
                        .HasColumnName("Setor");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("DataInicio");

                    b.Property<DateOnly>("SurveyExpiration")
                        .HasColumnType("date")
                        .HasColumnName("VistoriaVencimento");

                    b.Property<decimal>("VehicleId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("VeiculoId");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Manutencao", (string)null);
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Stop", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataExclusao");

                    b.Property<bool>("IsFinalStop")
                        .HasColumnType("bit")
                        .HasColumnName("PontoFinal");

                    b.Property<bool>("IsInitialStop")
                        .HasColumnType("bit")
                        .HasColumnName("PontoInicial");

                    b.Property<decimal>("Latitude")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.Property<decimal>("LineAddressId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("LinhaEnderecoId");

                    b.Property<decimal>("Longitude")
                        .HasPrecision(19, 4)
                        .HasColumnType("decimal(19,4)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.HasIndex("LineAddressId");

                    b.ToTable("Parada", (string)null);
                });

            modelBuilder.Entity("OneBus.Domain.Entities.StopTime", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<byte>("DayType")
                        .HasColumnType("tinyint")
                        .HasColumnName("Dia");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataExclusao");

                    b.Property<decimal>("StopId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("ParadaId");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Horario");

                    b.HasKey("Id");

                    b.HasIndex("StopId");

                    b.ToTable("ParadaHorario", (string)null);
                });

            modelBuilder.Entity("OneBus.Domain.Entities.User", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<decimal>("CompanyId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("EmpresaId");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataExclusao");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Image")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Foto");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("Nome");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Senha");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Telefone");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("Sal");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Vehicle", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateOnly>("AcquisitionDate")
                        .HasColumnType("date")
                        .HasColumnName("DataAquisicao");

                    b.Property<byte>("AxesNumber")
                        .HasColumnType("tinyint")
                        .HasColumnName("NumeroEixos");

                    b.Property<string>("BodyworkNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NumeroCarroceria");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Marca");

                    b.Property<string>("Color")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Cor");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataExclusao");

                    b.Property<string>("EngineNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NumeroMotor");

                    b.Property<byte>("FuelType")
                        .HasColumnType("tinyint")
                        .HasColumnName("TipoCombustivel");

                    b.Property<bool>("HasAccessibility")
                        .HasColumnType("bit")
                        .HasColumnName("TemAcessibilidade");

                    b.Property<string>("Image")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Foto");

                    b.Property<DateOnly>("IpvaExpiration")
                        .HasColumnType("date")
                        .HasColumnName("IpvaVencimento");

                    b.Property<DateOnly>("LicensingExpiration")
                        .HasColumnType("date")
                        .HasColumnName("LicenciamentoVencimento");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Modelo");

                    b.Property<string>("NumberChassis")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NumeroChassi");

                    b.Property<byte>("NumberDoors")
                        .HasColumnType("tinyint")
                        .HasColumnName("NumeroPortas");

                    b.Property<byte>("NumberSeats")
                        .HasColumnType("tinyint")
                        .HasColumnName("NumeroAssentos");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Placa");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Prefixo");

                    b.Property<string>("Renavam")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.Property<byte>("TransmissionType")
                        .HasColumnType("tinyint")
                        .HasColumnName("TipoTransmissao");

                    b.Property<byte>("Type")
                        .HasColumnType("tinyint")
                        .HasColumnName("Tipo");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("Ano");

                    b.HasKey("Id");

                    b.HasIndex("Plate");

                    b.HasIndex("Prefix");

                    b.HasIndex("Renavam");

                    b.ToTable("Veiculo", (string)null);
                });

            modelBuilder.Entity("OneBus.Domain.Entities.VehicleGarage", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataExclusao");

                    b.Property<decimal>("GarageId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("GaragemId");

                    b.Property<decimal>("VehicleId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("VeiculoId");

                    b.HasKey("Id");

                    b.HasIndex("GarageId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VeiculoGaragem", (string)null);
                });

            modelBuilder.Entity("OneBus.Domain.Entities.VehicleOperation", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(20,0)");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataCriacao");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date")
                        .HasColumnName("Data");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("DataExclusao");

                    b.Property<decimal>("EmployeeWorkdayId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("FuncionarioHorarioId");

                    b.Property<decimal>("VehicleId")
                        .HasColumnType("decimal(20,0)")
                        .HasColumnName("VeiculoId");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeWorkdayId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VeiculoOperacao", (string)null);
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Bus", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("Buses")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.BusAudit", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.Bus", "Bus")
                        .WithMany("BusAudits")
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OneBus.Domain.Entities.Employee", "Employee")
                        .WithMany("BusAudits")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.BusOperation", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.Bus", "Bus")
                        .WithMany("BusOperations")
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OneBus.Domain.Entities.EmployeeWorkday", "EmployeeWorkday")
                        .WithMany("BusOperations")
                        .HasForeignKey("EmployeeWorkDayId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OneBus.Domain.Entities.LineTime", "LineTime")
                        .WithMany("BusOperations")
                        .HasForeignKey("LineTimeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("EmployeeWorkday");

                    b.Navigation("LineTime");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Company", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.Address", "Address")
                        .WithMany("Companies")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Employee", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.Address", "Address")
                        .WithMany("Employees")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.EmployeeGarage", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.Employee", "Employee")
                        .WithMany("EmployeeGarages")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OneBus.Domain.Entities.Garage", "Garage")
                        .WithMany("EmployeeGarages")
                        .HasForeignKey("GarageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Garage");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.EmployeeWorkday", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.Employee", "Employee")
                        .WithMany("EmployeeWorkdays")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Garage", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.Address", "Address")
                        .WithMany("Garages")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OneBus.Domain.Entities.Company", "Company")
                        .WithMany("Garages")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Line", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.Company", "Company")
                        .WithMany("Lines")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.LineAddress", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.Address", "Address")
                        .WithMany("LineAddresses")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OneBus.Domain.Entities.Line", "Line")
                        .WithMany("LineAddresses")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Line");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.LineTariff", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.Line", "Line")
                        .WithMany("LineTariffs")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Line");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.LineTariffAudit", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.Employee", "Employee")
                        .WithMany("LineTariffAudits")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OneBus.Domain.Entities.LineTariff", "LineTariff")
                        .WithMany("LineTariffAudits")
                        .HasForeignKey("LineTariffId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("LineTariff");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.LineTime", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.Line", "Line")
                        .WithMany("LineTimes")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Line");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Maintenance", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("Maintenances")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Stop", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.LineAddress", "LineAddress")
                        .WithMany("Stops")
                        .HasForeignKey("LineAddressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LineAddress");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.StopTime", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.Stop", "Stop")
                        .WithMany("StopTimes")
                        .HasForeignKey("StopId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Stop");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.User", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.VehicleGarage", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.Garage", "Garage")
                        .WithMany("VehicleGarages")
                        .HasForeignKey("GarageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OneBus.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("VehicleGarages")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Garage");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.VehicleOperation", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.EmployeeWorkday", "EmployeeWorkday")
                        .WithMany("VehicleOperations")
                        .HasForeignKey("EmployeeWorkdayId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OneBus.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("VehicleOperations")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EmployeeWorkday");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Address", b =>
                {
                    b.Navigation("Companies");

                    b.Navigation("Employees");

                    b.Navigation("Garages");

                    b.Navigation("LineAddresses");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Bus", b =>
                {
                    b.Navigation("BusAudits");

                    b.Navigation("BusOperations");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Company", b =>
                {
                    b.Navigation("Garages");

                    b.Navigation("Lines");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Employee", b =>
                {
                    b.Navigation("BusAudits");

                    b.Navigation("EmployeeGarages");

                    b.Navigation("EmployeeWorkdays");

                    b.Navigation("LineTariffAudits");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.EmployeeWorkday", b =>
                {
                    b.Navigation("BusOperations");

                    b.Navigation("VehicleOperations");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Garage", b =>
                {
                    b.Navigation("EmployeeGarages");

                    b.Navigation("VehicleGarages");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Line", b =>
                {
                    b.Navigation("LineAddresses");

                    b.Navigation("LineTariffs");

                    b.Navigation("LineTimes");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.LineAddress", b =>
                {
                    b.Navigation("Stops");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.LineTariff", b =>
                {
                    b.Navigation("LineTariffAudits");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.LineTime", b =>
                {
                    b.Navigation("BusOperations");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Stop", b =>
                {
                    b.Navigation("StopTimes");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Vehicle", b =>
                {
                    b.Navigation("Buses");

                    b.Navigation("Maintenances");

                    b.Navigation("VehicleGarages");

                    b.Navigation("VehicleOperations");
                });
#pragma warning restore 612, 618
        }
    }
}
