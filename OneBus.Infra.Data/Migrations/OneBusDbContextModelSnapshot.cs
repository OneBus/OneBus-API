// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OneBus.Infra.Data.DbContexts;

#nullable disable

namespace OneBus.Infra.Data.Migrations
{
    [DbContext(typeof(OneBusDbContext))]
    partial class OneBusDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OneBus.Domain.Entities.Bus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ChassisBrand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("ChassisModel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("ChassisYear")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("FumigateExpiration")
                        .HasColumnType("date");

                    b.Property<bool>("HasLeftDoors")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasLowFloor")
                        .HasColumnType("boolean");

                    b.Property<DateOnly>("InsuranceExpiration")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<byte>("ServiceType")
                        .HasColumnType("smallint");

                    b.Property<long>("VehicleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Bus");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.BusOperation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("BusId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<long>("EmployeeWorkDayId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("LineTimeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.HasIndex("EmployeeWorkDayId");

                    b.HasIndex("LineTimeId");

                    b.ToTable("BusOperation");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<byte?>("BloodType")
                        .HasColumnType("smallint");

                    b.Property<byte?>("CnhCategory")
                        .HasColumnType("smallint");

                    b.Property<DateOnly?>("CnhExpiration")
                        .HasColumnType("date");

                    b.Property<string>("CnhNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("character varying(80)");

                    b.Property<DateOnly>("HiringDate")
                        .HasColumnType("date");

                    b.Property<byte[]>("Image")
                        .HasColumnType("bytea");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)");

                    b.Property<byte>("Role")
                        .HasColumnType("smallint");

                    b.Property<byte>("Status")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CnhNumber");

                    b.HasIndex("Code");

                    b.HasIndex("Cpf");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.EmployeeWorkday", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte>("DayType")
                        .HasColumnType("smallint");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time without time zone");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeWorkday");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Line", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<byte>("MaxNumberBuses")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Mileage")
                        .HasPrecision(19, 4)
                        .HasColumnType("numeric(19,4)");

                    b.Property<byte>("MinNumberBuses")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)");

                    b.Property<TimeOnly>("TravelTime")
                        .HasColumnType("time without time zone");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Line");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.LineTime", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte>("DayType")
                        .HasColumnType("smallint");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("LineId")
                        .HasColumnType("bigint");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time without time zone");

                    b.HasKey("Id");

                    b.HasIndex("LineId");

                    b.ToTable("LineTime");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Maintenance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Cost")
                        .HasPrecision(19, 4)
                        .HasColumnType("numeric(19,4)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("character varying(150)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<byte>("Sector")
                        .HasColumnType("smallint");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("SurveyExpiration")
                        .HasColumnType("date");

                    b.Property<long>("VehicleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Maintenance");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("character varying(80)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(32)
                        .IsUnicode(false)
                        .HasColumnType("character varying(32)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2025, 8, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "onebus@admin",
                            IsDeleted = false,
                            Name = "Administrador",
                            Password = "YRT66Z4XEJ2SSNaJVDIXQW7uvC8LSvOxDU1sH/Sr/ic=",
                            Salt = "c37b6028194d489192aac9391801594a"
                        });
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Vehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateOnly>("AcquisitionDate")
                        .HasColumnType("date");

                    b.Property<byte>("AxesNumber")
                        .HasColumnType("smallint");

                    b.Property<string>("BodyworkNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Color")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EngineNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)");

                    b.Property<byte>("FuelType")
                        .HasColumnType("smallint");

                    b.Property<bool>("HasAccessibility")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("Image")
                        .HasColumnType("bytea");

                    b.Property<DateOnly>("IpvaExpiration")
                        .HasColumnType("date");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateOnly>("LicensingExpiration")
                        .HasColumnType("date");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("NumberChassis")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)");

                    b.Property<byte>("NumberDoors")
                        .HasColumnType("smallint");

                    b.Property<byte>("NumberSeats")
                        .HasColumnType("smallint");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("Renavam")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)");

                    b.Property<byte>("Status")
                        .HasColumnType("smallint");

                    b.Property<byte>("TransmissionType")
                        .HasColumnType("smallint");

                    b.Property<byte>("Type")
                        .HasColumnType("smallint");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Plate");

                    b.HasIndex("Prefix");

                    b.HasIndex("Renavam");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.VehicleOperation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<long>("EmployeeWorkdayId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("VehicleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeWorkdayId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleOperation");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Bus", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("Buses")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.BusOperation", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.Bus", "Bus")
                        .WithMany("BusOperations")
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OneBus.Domain.Entities.EmployeeWorkday", "EmployeeWorkday")
                        .WithMany("BusOperations")
                        .HasForeignKey("EmployeeWorkDayId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OneBus.Domain.Entities.LineTime", "LineTime")
                        .WithMany("BusOperations")
                        .HasForeignKey("LineTimeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("EmployeeWorkday");

                    b.Navigation("LineTime");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.EmployeeWorkday", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.Employee", "Employee")
                        .WithMany("EmployeeWorkdays")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.LineTime", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.Line", "Line")
                        .WithMany("LineTimes")
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Line");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Maintenance", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("Maintenances")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.VehicleOperation", b =>
                {
                    b.HasOne("OneBus.Domain.Entities.EmployeeWorkday", "EmployeeWorkday")
                        .WithMany("VehicleOperations")
                        .HasForeignKey("EmployeeWorkdayId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("OneBus.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("VehicleOperations")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("EmployeeWorkday");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Bus", b =>
                {
                    b.Navigation("BusOperations");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Employee", b =>
                {
                    b.Navigation("EmployeeWorkdays");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.EmployeeWorkday", b =>
                {
                    b.Navigation("BusOperations");

                    b.Navigation("VehicleOperations");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Line", b =>
                {
                    b.Navigation("LineTimes");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.LineTime", b =>
                {
                    b.Navigation("BusOperations");
                });

            modelBuilder.Entity("OneBus.Domain.Entities.Vehicle", b =>
                {
                    b.Navigation("Buses");

                    b.Navigation("Maintenances");

                    b.Navigation("VehicleOperations");
                });
#pragma warning restore 612, 618
        }
    }
}
